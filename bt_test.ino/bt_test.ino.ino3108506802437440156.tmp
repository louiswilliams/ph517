#include <SPI.h>

#include <Adafruit_ATParser.h>
#include <Adafruit_BLE.h>
#include <Adafruit_BluefruitLE_UART.h>

#define BUFSIZE 64
#define BT_SERIAL Serial1
#define BT_MOD_PIN -1
#define PH_DEBUG true

Adafruit_BluefruitLE_UART ble(BT_SERIAL, BT_MOD_PIN);

void setup() {
  delay(1000);
  Serial.begin(115200);
  Serial.println("Bluetooth AT Command Test");
  if (!ble.begin(true)) {
    exitError("Failed to init BT module");
  }
  if (!ble.factoryReset()) {
    exitError("Could not factory reset"); 
  }
  ble.echo(false);
  ble.info();
}

void loop() {
 // Display command prompt
  Serial.print(F("AT > "));

  // Check for user input and echo it back if anything was found
  char command[BUFSIZE+1];
  getUserInput(command, BUFSIZE);

  // Send command
  ble.println(command);

  // Check response status
  ble.waitForOK(); 
}

void getUserInput(char buffer[], uint8_t maxSize)
{
  memset(buffer, 0, maxSize);
  while( Serial.available() == 0 ) {
    delay(1);
  }

  uint8_t count=0;

  do
  {
    count += Serial.readBytes(buffer+count, maxSize);
    delay(2);
  } while( (count < maxSize) && !(Serial.available() == 0) );
}

void exitError(String s) {
  Serial.println("error: " + s);
}

